/*
#100. 螺旋方阵
内存限制：256 MiB
时间限制：1000 ms
标准输入输出
题目类型：传统
评测方式：文本比较
上传者： admin
用户限制： Lv.0
题目描述
一个 n 行 n 列的螺旋方阵按如下方法生成：从方阵的左上角（第 1 行第 1 列）出发，初始时向右移动；如果前方是未曾经过的格子，则继续前进；
否则，右转。重复上述操作直至经过方阵中所有格子。根据经过顺序，在格子中依次填入 1，2，3，......，n^2，便构成了一个螺旋方阵。

 复制
　　  1 2 3　　　　  1  2  3 4
　　  8 9 4　　　　 12 13 14 5
　　  7 6 5　　　　 11 16 15 6
                  10  9  8 7
编程输入一个正整数 n，生成一个 n×n 的螺旋方阵。

输入格式
一行一个正整数 n，1≤n≤750。

输出格式
共 n 行，每行 n 个正整数，空格隔开。

样例
input
3

output
1 2 3
8 9 4
7 6 5
*/
#include<bits/stdc++.h>
using namespace std;
int a[755][755];
int main(){
	int n;
	cin>>n;
	int i=1,j=0,tnt=0;
	while(tnt<n*n){
		while(j+1<=n&&a[i][j+1]==0){
			a[i][++j]=++tnt;
		}
		while(i+1<=n&&a[i+1][j]==0){
			a[++i][j]=++tnt;
		}
		while(j-1>=1&&a[i][j-1]==0){
			a[i][--j]=++tnt;
		}
		while(i-1>=1&&a[i-1][j]==0){
			a[--i][j]=++tnt;
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			cout<<a[i][j]<<" ";
		}
		cout<<endl;
	}
	return 0;
}
